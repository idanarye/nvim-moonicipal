M.setup({config})                                                      *M.setup*

    Parameters: ~
        {config}  (MoonicipalSettings)


M.tasks_file()                                                    *M.tasks_file*

    Returns: ~
        (Populator|fun(opts:Decoration)|MoonicipalTask)


M.select_and_invoke()                                      *M.select_and_invoke*


M.invoke()                                                            *M.invoke*


M.read_task_file()                                            *M.read_task_file*


MoonicipalInputOptions                                  *MoonicipalInputOptions*

    Fields: ~
        {prompt?}   (string)
        {default?}  (string)


M.input({opts?})                                                       *M.input*

    Parameters: ~
        {opts?}  (MoonicipalInputOptions)


MoonicipalSelectOptions                                *MoonicipalSelectOptions*

    Fields: ~
        {prompt?}  (string)
        {format?}  (MoonicipalOptionTransformer)


M.select({opts?})                                                     *M.select*

    Parameters: ~
        {opts?}  (MoonicipalSelectOptions)


M.abort()                                                              *M.abort*


M.fix_echo()                                                        *M.fix_echo*


M.sleep()                                                              *M.sleep*


M.fake_scratch_buffer()                                  *M.fake_scratch_buffer*


M.get_buf_contents()                                        *M.get_buf_contents*


M.set_buf_contents()                                        *M.set_buf_contents*


MoonicipalSettings                                          *MoonicipalSettings*

    Fields: ~
        {file_prefix?}               (string)
        {tasks_selection_lru_size?}  (number)


MoonicipalTask                                                  *MoonicipalTask*

    Fields: ~
        {task_def}  (table)
        {context}   (table)
        {cache}     (table)  Data that will be there on the new run


MoonicipalTask:is_main()                                *MoonicipalTask:is_main*
     Check if this is the entry task of the current execution.
    @return
    | true # if this task was invoked directly from a user command
    | false # if this task was invoked as a dependency of another task


MoonicipalTask:cache_result({...})                 *MoonicipalTask:cache_result*

    Parameters: ~
        {...}  (P)

    Returns: ~
        (T)


MoonicipalTask:cached_buf_in_tab({...})       *MoonicipalTask:cached_buf_in_tab*

    Parameters: ~
        {...}  (P)

    Returns: ~
        (T)


CachedChoiceConfiguration                            *CachedChoiceConfiguration*

    Fields: ~
        {key}     (MoonicipalOptionTransformer)  Mandatory. How to recognize the cached option.
        {format}  (MoonicipalOptionTransformer)  How to display the option in the selection UI.


CachedChoice                                                      *CachedChoice*


MoonicipalTask:cached_choice({cfg?})              *MoonicipalTask:cached_choice*

    Parameters: ~
        {cfg?}  (CachedChoiceConfiguration)  The configuraiton. `key` is mandatory, and `format` is probably needed.

    Returns: ~
        (CachedChoice)


MoonicipalCachedDataCellOptions                *MoonicipalCachedDataCellOptions*

    Fields: ~
        {win?}       (function|string)  Run to create a window for the data cell buffer. Defaults to `botright new`
        {buf_init?}  (function|string)  Run only if the data cell buffer is created
        {buf?}       (function|string)  Run every time to configure the buffer
        {default?}   (string|string[])  yup


MoonicipalTask:cached_data_cell({opts})        *MoonicipalTask:cached_data_cell*

    Parameters: ~
        {opts}  (MoonicipalCachedDataCellOptions)  @return string?


vim:tw=78:ts=8:noet:ft=help:norl:
